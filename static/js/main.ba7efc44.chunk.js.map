{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["UserSearchIcon","styled","UserSearch","SearchBar","props","history","useHistory","useState","require","contacts","matchCount","setMatchCount","searchText","setSearchText","increment","name","len","inc","getLen","setName","value","getName","incrementLenVar","useEffect","Container","Row","className","style","marginTop","Col","fontSize","borderBottom","textShadow","color","onMouseEnter","e","target","backgroundColor","padding","border","onMouseLeave","size","FormControl","type","id","placeholder","onChange","ListGroup","display","map","contact","firstName","toLowerCase","lastname","lastName","match","regexName","RegExp","ListGroupItem","key","email","cursor","onClick","push","fontWeight","Contactpage","setcontact","location","state","Breadcrumb","Item","active","phoneNumber","address","marginRight","city","zipcode","App","exact","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba7efc44.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tListGroup,\n\tListGroupItem,\n\tFormControl,\n\tBreadcrumb\n} from 'react-bootstrap';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport { UserSearch } from '@styled-icons/remix-line/UserSearch';\nconst UserSearchIcon = styled(UserSearch)`\n\tcolor: #6bd4c1;\n\tfont-weight: bold;\n\tbackground-color: #142438;\n\twidth: 50px;\n`;\n\n\nfunction SearchBar(props) {\n\tconst history = useHistory();\n\tconst [contacts,] = useState(() => require('./contacts.json'));\n\tconst [matchCount, setMatchCount] = useState(null);\n\tconst [searchText, setSearchText] = useState('');\n\n\tfunction incrementLenVar() {\n\t\tlet name = '';\n\t\tlet len = 0;\n\t\tconst inc = () => (len += 1);\n\t\tconst getLen = () => len;\n\t\tconst setName = value => (name = value);\n\t\tconst getName = () => name;\n\t\treturn {\n\t\t\tinc,\n\t\t\tgetLen,\n\t\t\tsetName,\n\t\t\tgetName\n\t\t};\n\t}\n\n\tconst increment = incrementLenVar();\n\tincrement.setName('Increment Value');\n\n\tuseEffect(() => setMatchCount(increment.getLen()), [increment]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<Row className='' style={{ marginTop: 'calc(25vh)' }}>\n\t\t\t\t\t<Col className='align-self-center'>\n\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\tclassName='mb-5 pb-3 mt-5'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: '3em',\n\t\t\t\t\t\t\t\tborderBottom: '3px solid white',\n\t\t\t\t\t\t\t\ttextShadow: '1px 1px 7px black'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<span className='text-white'>C</span>\n\t\t\t\t\t\t\t<span style={{ color: '#6bd4c1' }}>ontacts:</span>\n\n\t\t\t\t\t\t\t<i className='float-right' style={{ color: \"#6bd4c1\" }}>\n\t\t\t\t\t\t\t\t<span className='text-white'>{matchCount}</span> Matches\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<h6 className='text-white mb-2'\n\t\t\t\t\t\t\tonMouseEnter={e => {\n\t\t\t\t\t\t\t\te.target.style.backgroundColor = '#142438';\n\t\t\t\t\t\t\t\te.target.style.padding = '7px';\n\t\t\t\t\t\t\t\te.target.style.border = '3px solid #6bd4c1';\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseLeave={e => {\n\t\t\t\t\t\t\t\te.target.style.backgroundColor = '';\n\t\t\t\t\t\t\t\te.target.style.padding = '0px';\n\t\t\t\t\t\t\t\te.target.style.border = '';\n\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\tWill search firstname and lastname\n\t\t\t\t\t\t</h6>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='d-flex rounded py-3'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#142438',\n\t\t\t\t\t\t\t\tborder: '3px solid #6bd4c1'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<UserSearchIcon size='36' className='mt-2' />\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tclassName='shadow-lg'\n\t\t\t\t\t\t\t\tstyle={{ border: 'none', fontSize: '1.7em' }}\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='searchBox'\n\t\t\t\t\t\t\t\tplaceholder='Search for contact . . . '\n\t\t\t\t\t\t\t\tonChange={e => setSearchText(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<ListGroup\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: !searchText ? 'none' : '',\n\t\t\t\t\t\t\t\tfontSize: '1.5em'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{!searchText\n\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t: contacts.map(contact => {\n\t\t\t\t\t\t\t\t\t//convert contact name to lowercase\n\t\t\t\t\t\t\t\t\tlet name = contact.firstName.toLowerCase();\n\t\t\t\t\t\t\t\t\tlet lastname = contact.lastName.toLowerCase();\n\n\n\t\t\t\t\t\t\t\t\t//This eslint, line disables the no-useless-escape error;\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t\t\t\t\tlet ifItsNotALetter = /[^a-z]/; //Matches any characters except those in the range a-z.\n\n\t\t\t\t\t\t\t\t\tif (searchText.match(ifItsNotALetter)) return null;\n\n\n\t\t\t\t\t\t\t\t\t//Build RegEx, search for first character match at the beginning of the string\n\t\t\t\t\t\t\t\t\tlet regexName = new RegExp(`^${searchText}`, 'ig');\n\n\t\t\t\t\t\t\t\t\tif (name.match(regexName) || lastname.match(regexName)) {\n\t\t\t\t\t\t\t\t\t\tincrement.inc();\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={contact.email}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='list-group-item shadow-lg'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#142438',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push(`/contact/${name}`, [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontact\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='text-secondary'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '1.5em' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='listItemFirstName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{contact.firstName.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{contact.lastName.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div >\n\t);\n}\n\nfunction Contactpage(props) {\n\tconst history = useHistory();\n\tconst [contact, setcontact] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (history.location.state) {\n\t\t\tsetcontact(history.location.state[0]);\n\t\t} else {\n\t\t\thistory.push('/');\n\t\t}\n\t}, [history]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<Row id='contact-container'>\n\t\t\t\t\t<Col\n\t\t\t\t\t\tclassName='text-white text-cente align-self-center rounded shadow-lg'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: '#142438',\n\t\t\t\t\t\t\tborder: '3px solid #6bd4c1'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className='p-5'>\n\t\t\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\t\t\tclassName='breadcrumb'\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#142438' }}>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item onClick={() => history.push('/')}>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item active>contact</Breadcrumb.Item>\n\t\t\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t\t\t<h1 style={{ fontSize: '3em' }}>\n\t\t\t\t\t\t\t\t{contact.firstName} {contact.lastName}\n\t\t\t\t\t\t\t</h1>{' '}\n\t\t\t\t\t\t\t<hr style={{ backgroundColor: '#6bd4c1' }} />\n\t\t\t\t\t\t\t<section style={{ fontSize: '2em' }}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tPhone:\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.phoneNumber}{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tEmail:{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{contact.email}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tAddress:{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{contact.address}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e',\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: 3\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tCity:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.city} &nbsp;\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tState:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.state} &nbsp;\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tZipcode:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.zipcode}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<SearchBar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/contact/:name'>\n\t\t\t\t\t<Contactpage />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n\nReactDOM.render(\n    \n    <Router>\n        <App />\n    </Router>    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}