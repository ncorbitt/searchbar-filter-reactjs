{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["UserSearchIcon","styled","UserSearch","Note","Header","Navbar","id","className","fixed","style","backgroundColor","height","opacity","Brand","href","fontSize","textShadow","color","SearchBar","props","history","useHistory","useState","require","contacts","matchCount","setMatchCount","searchText","setSearchText","increment","name","len","inc","getLen","setName","value","getName","incrementLenVar","useEffect","Container","Row","Col","top","marginLeft","textDecoration","padding","fontFamily","fontWeight","lineHeight","display","borderRadius","target","rel","title","xmlns","width","position","verticalAlign","fill","viewBox","d","xs","sm","borderBottom","size","FormControl","border","type","placeholder","onChange","e","toLowerCase","ListGroup","map","contact","firstName","lastname","lastName","match","regexName","RegExp","ListGroupItem","key","email","cursor","onClick","push","Contactpage","setcontact","location","state","Breadcrumb","Item","active","phoneNumber","address","marginRight","city","zipcode","App","exact","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"khpBAgBA,IAAMA,EAAiBC,YAAOC,IAAPD,CAAH,KAOdE,EAAOF,YAAO,UAAPA,CAAH,KAaV,SAASG,IACR,OACC,kBAACC,EAAA,EAAD,CAAQC,GAAG,uBAAuBC,UAAU,SAASC,MAAM,MAAMC,MAAO,CAAEC,gBAAgB,UAAWC,OAAO,GAAIC,QAAQ,OACtH,kBAACP,EAAA,EAAOQ,MAAR,CAAcC,KAAK,IAAIP,UAAU,0BAChC,wBAAID,GAAG,cAAcC,UAAU,OAAOE,MAAO,CAAEM,SAAU,MAAOC,WAAY,sBAE3E,0BAAMT,UAAU,cAAhB,KAAqC,0BAAME,MAAO,CAAEQ,MAAO,YAAtB,SACrC,0BAAMV,UAAU,cAAhB,KAAqC,0BAAME,MAAO,CAAEQ,MAAO,YAAtB,UACrC,0BAAMV,UAAU,cAAhB,KAAqC,0BAAME,MAAO,CAAEQ,MAAO,YAAtB,YAO3C,SAASC,EAAUC,GAClB,IAAMC,EAAUC,cADS,EAELC,oBAAS,kBAAMC,EAAQ,OAApCC,EAFkB,sBAGWF,mBAAS,MAHpB,mBAGlBG,EAHkB,KAGNC,EAHM,OAIWJ,mBAAS,IAJpB,mBAIlBK,EAJkB,KAINC,EAJM,KAqBzB,IAAMC,EAfN,WACC,IAAIC,EAAO,GACPC,EAAM,EAKV,MAAO,CACNC,IALW,kBAAOD,GAAO,GAMzBE,OALc,kBAAMF,GAMpBG,QALe,SAAAC,GAAK,OAAKL,EAAOK,GAMhCC,QALe,kBAAMN,IASLO,GAKlB,OAJAR,EAAUK,QAAQ,mBAElBI,qBAAU,kBAAMZ,EAAcG,EAAUI,YAAW,CAACJ,IAGnD,6BACC,kBAACU,EAAA,EAAD,KAEC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACA,6BAASnC,GAAG,gBAAgBC,UAAU,4DAA4DE,MAAO,CAAEiC,IAAI,IAAKC,WAAW,QAC5G,wBAAIpC,UAAU,QAAd,yBACA,uBACIE,MAAO,CACHC,gBAAiB,QACjBO,MAAO,QACP2B,eAAgB,OAChBC,QAAS,UACTC,WAAY,qKACZ/B,SAAU,GAAIgC,WAAY,OAAQC,WAAY,MAAOC,QAAS,eAAgBC,aAAc,GAEhGpC,KAAK,+GAAuHqC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,4EAC5K,0BAAM5C,MAAO,CAAEwC,QAAS,eAAgBJ,QAAS,YAC7C,yBACIS,MAAM,6BACN7C,MAAO,CAAEE,OAAQ,GAAI4C,MAAO,OAAQC,SAAU,WAAYC,cAAe,SAAUf,IAAK,OAAQgB,KAAM,SACtGC,QAAQ,aACR,gDACA,0BACIC,EAAE,mDAId,0BAAMnD,MAAO,CAAEwC,QAAS,eAAgBJ,QAAS,YAAjD,mBAKxB,kBAACL,EAAA,EAAD,CAAKjC,UAAU,GAAGE,MAAO,IACxB,kBAACgC,EAAA,EAAD,CAAKoB,GAAI,GAAIC,GAAI,GAAIvD,UAAU,qBAE9B,kBAACJ,EAAD,CAAMG,GAAG,OAAOC,UAAU,oBAAoBE,MAAO,IACpD,iHAIA,2HAEqB,6BAFrB,oFAOA,sHAQH,kBAAC+B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKnC,GAAG,mBAAmBC,UAAU,IACpC,wBACCD,GAAG,QACHC,UAAU,yBACVE,MAAO,CACNM,SAAU,QACVgD,aAAc,kBACd/C,WAAY,sBAGb,0BAAMT,UAAU,cAAhB,KAAqC,0BAAME,MAAO,CAAEQ,MAAO,YAAtB,YAGrC,uBAAGX,GAAG,GAAGC,UAAU,cAAcE,MAAO,CAAEQ,MAAO,YAChD,0BAAMV,UAAU,cAAckB,GAD/B,aAKD,wBAAIlB,UAAU,mBAAd,sCAMA,yBACCA,UAAU,sBACVE,MAAO,CAACC,gBAAiB,YACzB,kBAACV,EAAD,CAAgBgE,KAAK,KAAKzD,UAAU,SACpC,kBAAC0D,EAAA,EAAD,CACC1D,UAAU,YACVE,MAAO,CAAEyD,OAAQ,OAAQnD,SAAU,SACnCiD,KAAK,KACLG,KAAK,OACL7D,GAAG,YACH8D,YAAY,4BACZC,SAAU,SAAAC,GAAC,OAAI1C,EAAc0C,EAAEnB,OAAOhB,MAAMoC,mBAI9C,kBAACC,EAAA,EAAD,CACC/D,MAAO,CAACwC,QAAUtB,EAAsB,GAAT,OAAYZ,SAAU,UACnDY,EAECH,EAASiD,KAAI,SAAAC,GAEd,IAAI5C,EAAO4C,EAAQC,UAAUJ,cACzBK,EAAWF,EAAQG,SAASN,cAOhC,GAAI5C,EAAWmD,MAFO,UAEiB,OAAO,KAI9C,IAAIC,EAAY,IAAIC,OAAJ,WAAerD,GAAc,MAE7C,OAAIG,EAAKgD,MAAMC,IAAcH,EAASE,MAAMC,IAC3ClD,EAAUG,MAGT,kBAACiD,EAAA,EAAD,CACCC,IAAKR,EAAQS,MACb5E,UAAU,4BACVE,MAAO,CACNC,gBAAiB,UACjB0E,OAAQ,UACRxE,QAAQ,MAETyE,QAAS,kBACRjE,EAAQkE,KAAR,mBAAyBxD,GAAQ,CAChC4C,MAGF,wBACCnE,UAAU,iBACVE,MAAO,CAAEM,SAAU,UACnB,0BACCT,GAAG,oBACHG,MAAO,CACNQ,MAAO,UACP8B,WAAY,SAEZ2B,EAAQC,UAAUJ,eACZ,IAVT,OAYE,0BAAM9D,MAAO,CAAEQ,MAAO,YACrByD,EAAQG,SAASN,kBAMf,MArDP,QAiEV,SAASgB,EAAYpE,GACpB,IAAMC,EAAUC,cADW,EAEGC,mBAAS,IAFZ,mBAEpBoD,EAFoB,KAEXc,EAFW,KAY3B,OARAlD,qBAAU,WACLlB,EAAQqE,SAASC,MACpBF,EAAWpE,EAAQqE,SAASC,MAAM,IAElCtE,EAAQkE,KAAK,OAEZ,CAAClE,IAGH,6BACC,kBAACmB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKlC,GAAG,oBAAoBG,MAAO,CAACE,OAAQ,MAC3C,kBAAC8B,EAAA,EAAD,CACCnC,GAAG,UACHC,UAAU,8CACVE,MAAO,CAACC,gBAAiB,UAAUE,QAAS,OAC5C,yBAAKN,GAAG,cAAcC,UAAU,OAC/B,kBAACoF,EAAA,EAAD,CACCpF,UAAU,mBACVE,MAAO,CAAEC,gBAAiB,UAAWK,SAAS,UAC9C,kBAAC4E,EAAA,EAAWC,KAAZ,CAAiBP,QAAS,kBAAMjE,EAAQkE,KAAK,OAA7C,QAGA,kBAACK,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,GAAvB,YAGD,wBAAIpF,MAAO,CAAEM,SAAU,QACrB2D,EAAQC,UADV,IACsBD,EAAQG,UACxB,IACN,wBAAIpE,MAAO,CAAEC,gBAAiB,aAC9B,6BAASD,MAAO,CAAEM,SAAU,QAC3B,2BACC,2BACCN,MAAO,CAAEQ,MAAO,UAAW8B,WAAY,SADxC,UAIA,2BAAOtC,MAAO,CAAEQ,MAAO,YACrB,IACAyD,EAAQoB,YAAa,MAGxB,2BACC,2BACCrF,MAAO,CAAEQ,MAAO,UAAW8B,WAAY,SADxC,SAEQ,KAER,2BAAOtC,MAAO,CAAEQ,MAAO,YACrByD,EAAQS,QAGX,2BACC,2BACC1E,MAAO,CAAEQ,MAAO,UAAW8B,WAAY,SADxC,WAEU,KAEV,2BAAOtC,MAAO,CAAEQ,MAAO,YACrByD,EAAQqB,UAGX,2BACC,+BACC,0BACCtF,MAAO,CACNsC,WAAY,OACZ9B,MAAO,UACP+E,YAAa,IAEb,IANF,QAOO,KACC,IACPtB,EAAQuB,KAVV,QAWC,0BACCxF,MAAO,CACNsC,WAAY,OACZ9B,MAAO,YAEP,IALF,SAMQ,KACA,IACPyD,EAAQgB,MAnBV,QAoBC,0BACCjF,MAAO,CACNsC,WAAY,OACZ9B,MAAO,YAEP,IALF,WAMU,KACF,IACPyD,EAAQwB,gBA+BJC,MAjBf,WACC,OACC,yBAAK5F,UAAU,OACd,kBAACH,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,KACjB,kBAACnF,EAAD,OAED,kBAAC,IAAD,CAAOmF,KAAK,kBACX,kBAACd,EAAD,U,MCzVee,QACW,cAA7BC,OAAOd,SAASe,UAEe,UAA7BD,OAAOd,SAASe,UAEhBD,OAAOd,SAASe,SAAS1B,MACvB,2D,YCTN2B,IAASC,OAEL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fcb4db44.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tListGroup,\n\tListGroupItem,\n\tFormControl,\n\tBreadcrumb,\n\tNavbar\n} from 'react-bootstrap';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport { UserSearch } from '@styled-icons/remix-line/UserSearch';\nconst UserSearchIcon = styled(UserSearch)`\n\tcolor: #6bd4c1;\n\tfont-weight: bold;\n\tbackground-color: #142438;\n\twidth: 50px;\n`;\n\nconst Note = styled('section')`\n\tcolor: white;\n\tfont-size: 1.5em;\n\tmargin-top: 200px !important;\n\tmargin-bottom: 30px;\n\t\n\t& i{\n\t\tcolor: white;\n\t\ttext-shadow: 1px 1px 1px green\n\t}\n`\n\n\nfunction Header() {\n\treturn (\n\t\t<Navbar id='removeOpacityOnHover' className='shadow' fixed='top' style={{ backgroundColor:'#1f2f40', height:70, opacity:'.7'}}>\n\t\t\t\t<Navbar.Brand href='/' className='justify-content-center'>\n\t\t\t\t\t<h6 id='headerTitle' className='mt-2' style={{ fontSize: '2em', textShadow: '1px 1px 7px black' }}>\n\t\t\t\t\t\t{/* <UserSearch size='48' className='mt-n2 text-white mr-2' /> */}\n\t\t\t\t\t\t<span className='text-white'>R</span><span style={{ color: '#6bd4c1' }}>eact-</span>\n\t\t\t\t\t\t<span className='text-white'>S</span><span style={{ color: '#6bd4c1' }}>earch-</span>\n\t\t\t\t\t\t<span className='text-white'>F</span><span style={{ color: '#6bd4c1' }}>ilter</span>\n\t\t\t\t\t</h6>\n\t\t\t\t</Navbar.Brand>\n\t\t</Navbar>\n\t)\n}\n\nfunction SearchBar(props) {\n\tconst history = useHistory();\n\tconst [contacts,] = useState(() => require('./contacts.json'));\n\tconst [matchCount, setMatchCount] = useState(null);\n\tconst [searchText, setSearchText] = useState('');\n\n\tfunction incrementLenVar() {\n\t\tlet name = '';\n\t\tlet len = 0;\n\t\tconst inc = () => (len += 1);\n\t\tconst getLen = () => len;\n\t\tconst setName = value => (name = value);\n\t\tconst getName = () => name;\n\t\treturn {\n\t\t\tinc,\n\t\t\tgetLen,\n\t\t\tsetName,\n\t\t\tgetName\n\t\t};\n\t}\n\n\tconst increment = incrementLenVar();\n\tincrement.setName('Increment Value');\n\n\tuseEffect(() => setMatchCount(increment.getLen()), [increment]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t<section id='bg-pic-credit' className='position-fixed border border-white text-white rounded p-3' style={{ top:200, marginLeft:'60%' }}>\n                        <h6 className='mb-2'>Background Picture by</h6>\n                        <a\n                            style={{\n                                backgroundColor: 'black',\n                                color: 'white',\n                                textDecoration: 'none',\n                                padding: '4px 6px',\n                                fontFamily: '-apple-system, BlinkMacSystemFont, &quot;San Francisco&quot;, &quot;Helvetica Neue&quot;, Helvetica, Ubuntu, Roboto, Noto, &quot;Segoe UI&quot;, Arial, sans-serif',\n                                fontSize: 12, fontWeight: 'bold', lineHeight: '1.2', display: 'inline-block', borderRadius: 3\n                            }}\n                            href=\"https://unsplash.com/@hansonluu?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Download free do whatever you want high-resolution photos from Hanson Lu\">\n                            <span style={{ display: 'inline-block', padding: '2px 3px' }}>\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    style={{ height: 12, width: 'auto', position: 'relative', verticalAlign: 'middle', top: '-2px', fill: 'white' }}\n                                    viewBox=\"0 0 32 32\">\n                                    <title>unsplash-logo</title>\n                                    <path\n                                        d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\">\n                                    </path>\n                                </svg>\n                            </span>\n                            <span style={{ display: 'inline-block', padding: '2px 3px' }}> Hanson Lu </span>\n                        </a>\n                    </section>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className='' style={{}}>\n\t\t\t\t\t<Col xs={12} sm={12} className='align-self-center'>\n\n\t\t\t\t\t\t<Note id='Note' className='mt-5 w-75 mx-auto' style={{}}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\treact-search-filter, is just a basic filter to fiter data, from a input component.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe example below loads 100 contacts from json data and will be filtered\n\t\t\t\t\t\t\t\twhen typing a name. <br/>\n\t\t\t\t\t\t\t\tWhen you click on contact name, you will be routed\n\t\t\t\t\t\t\t\tto the contact's information.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\tReact-search-filter, utilizes react-bootstrap, for the look\n\t\t\t\t\t\t\t\tand it's responsiveness.\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</Note>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col id='search-container' className=''>\n\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\tclassName='mb-5 pb-3 mt-5 mx-auto'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: '2.5em',\n\t\t\t\t\t\t\t\tborderBottom: '3px solid white',\n\t\t\t\t\t\t\t\ttextShadow: '1px 1px 7px black'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{/* Contacts: */}\n\t\t\t\t\t\t\t<span className='text-white'>C</span><span style={{ color: '#6bd4c1' }}>ontacts:</span>\n\n\t\t\t\t\t\t\t{/* Matches */}\n\t\t\t\t\t\t\t<i id='' className='float-right' style={{ color: \"#6bd4c1\" }}>\n\t\t\t\t\t\t\t\t<span className='text-white'>{matchCount}</span> Matches\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<h4 className='text-white mb-2'>\n\n\t\t\t\t\t\t\tWill search firstname and lastname\n\n\t\t\t\t\t\t</h4>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='d-flex rounded py-3'\n\t\t\t\t\t\t\tstyle={{backgroundColor: '#142438',}}>\n\t\t\t\t\t\t\t<UserSearchIcon size='36' className='mt-2' />\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tclassName='shadow-lg'\n\t\t\t\t\t\t\t\tstyle={{ border: 'none', fontSize: '1.7em' }}\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='searchBox'\n\t\t\t\t\t\t\t\tplaceholder='Search for contact . . . '\n\t\t\t\t\t\t\t\tonChange={e => setSearchText(e.target.value.toLowerCase())}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<ListGroup\n\t\t\t\t\t\t\tstyle={{display: !searchText ? 'none' : '',fontSize: '1.5em'}}>\n\t\t\t\t\t\t\t{!searchText\n\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t: contacts.map(contact => {\n\t\t\t\t\t\t\t\t\t//convert contact name to lowercase\n\t\t\t\t\t\t\t\t\tlet name = contact.firstName.toLowerCase();\n\t\t\t\t\t\t\t\t\tlet lastname = contact.lastName.toLowerCase();\n\n\n\t\t\t\t\t\t\t\t\t//This eslint, line disables the no-useless-escape error;\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t\t\t\t\tlet ifItsNotALetter = /[^a-z]/; //Matches any characters except those in the range a-z.\n\n\t\t\t\t\t\t\t\t\tif (searchText.match(ifItsNotALetter)) return null;\n\n\n\t\t\t\t\t\t\t\t\t//Build RegEx, search for first character match at the beginning of the string\n\t\t\t\t\t\t\t\t\tlet regexName = new RegExp(`^${searchText}`, 'ig');\n\n\t\t\t\t\t\t\t\t\tif (name.match(regexName) || lastname.match(regexName)) {\n\t\t\t\t\t\t\t\t\t\tincrement.inc();\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={contact.email}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='list-group-item shadow-lg'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#142438',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\t\t\t\topacity:'.7'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push(`/contact/${name}`, [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontact\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='text-secondary'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '1.5em' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='listItemFirstName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{contact.firstName.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{contact.lastName.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div >\n\t);\n}\n\nfunction Contactpage(props) {\n\tconst history = useHistory();\n\tconst [contact, setcontact] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (history.location.state) {\n\t\t\tsetcontact(history.location.state[0]);\n\t\t} else {\n\t\t\thistory.push('/');\n\t\t}\n\t}, [history]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<Row id='contact-container' style={{height: 700}}>\n\t\t\t\t\t<Col\n\t\t\t\t\t\tid='contact'\n\t\t\t\t\t\tclassName='text-white align-self-end rounded shadow-lg'\n\t\t\t\t\t\tstyle={{backgroundColor: '#142438',opacity: '.7',}}>\n\t\t\t\t\t\t<div id='contactCard' className='p-5'>\n\t\t\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\t\t\tclassName='breadcrumb ml-n3'\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#142438', fontSize:'1.5em' }}>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item onClick={() => history.push('/')}>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item active>contact</Breadcrumb.Item>\n\t\t\t\t\t\t\t</Breadcrumb>\n\n\t\t\t\t\t\t\t<h1 style={{ fontSize: '3em' }}>\n\t\t\t\t\t\t\t\t{contact.firstName} {contact.lastName}\n\t\t\t\t\t\t\t</h1>{' '}\n\t\t\t\t\t\t\t<hr style={{ backgroundColor: '#6bd4c1' }} />\n\t\t\t\t\t\t\t<section style={{ fontSize: '2em' }}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tPhone:\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.phoneNumber}{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tEmail:{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{contact.email}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#2d5d8e', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\tAddress:{' '}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t<small style={{ color: '#6bd4c1' }}>\n\t\t\t\t\t\t\t\t\t\t{contact.address}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e',\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: 3\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tCity:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.city} &nbsp;\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tState:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.state} &nbsp;\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#2d5d8e'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tZipcode:{' '}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t{contact.zipcode}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\n\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<SearchBar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/contact/:name'>\n\t\t\t\t\t<Contactpage />\n\t\t\t\t</Route>\t\t\t\n\t\t\t</Switch>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n\nReactDOM.render(\n    \n    <Router>\n        <App />\n    </Router>    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}